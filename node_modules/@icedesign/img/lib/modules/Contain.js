"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _aliCDNSuffix = _interopRequireDefault(require("./aliCDNSuffix"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Contain =
/*#__PURE__*/
function (_Component) {
  _inherits(Contain, _Component);

  function Contain() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Contain);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Contain)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {};
    return _this;
  }

  _createClass(Contain, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          alt = _this$props.alt,
          title = _this$props.title,
          src = _this$props.src,
          width = _this$props.width,
          height = _this$props.height,
          _this$props$style = _this$props.style,
          style = _this$props$style === void 0 ? {} : _this$props$style,
          className = _this$props.className,
          onError = _this$props.onError,
          shape = _this$props.shape,
          enableAliCDNSuffix = _this$props.enableAliCDNSuffix;

      var styles = _objectSpread({}, style, {
        display: 'inline-block',
        width: width,
        height: height,
        overflow: 'hidden'
      });

      var centerStyles = {
        width: width,
        height: height,
        display: 'table-cell',
        verticalAlign: 'middle',
        textAlign: 'center'
      };
      var imgStyles = {
        width: 'auto',
        height: 'auto',
        maxWidth: width,
        maxHeight: height
      };
      var realSrc = enableAliCDNSuffix ? src + (0, _aliCDNSuffix.default)({
        width: width,
        height: height
      }) : src;
      var cls = (0, _classnames.default)('ice-img', shape, className);
      return _react.default.createElement("div", {
        className: cls,
        style: styles
      }, _react.default.createElement("div", {
        style: centerStyles
      }, _react.default.createElement("img", {
        style: imgStyles,
        onError: onError,
        ref: "img",
        src: realSrc,
        alt: alt,
        title: title
      })));
    }
  }]);

  return Contain;
}(_react.Component);

exports.default = Contain;
Contain.displayName = 'Contain';
Contain.propTypes = {
  src: _propTypes.default.string.isRequired,
  width: _propTypes.default.number,
  height: _propTypes.default.number,
  alt: _propTypes.default.string,
  onError: _propTypes.default.func,
  style: _propTypes.default.object,
  shape: _propTypes.default.string
};
Contain.defaultProps = {
  onError: function onError() {},
  alt: ''
};