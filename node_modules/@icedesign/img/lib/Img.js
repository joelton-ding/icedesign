'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Cover = _interopRequireDefault(require("./modules/Cover"));

var _Contain = _interopRequireDefault(require("./modules/Contain"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Img =
/*#__PURE__*/
function (_Component) {
  _inherits(Img, _Component);

  function Img(props) {
    var _this;

    _classCallCheck(this, Img);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Img).call(this, props));

    _this.handleImgLoadError = function () {
      if (_this.props.errorImgSrc) {
        _this.setState({
          src: _this.props.errorImgSrc
        });
      }

      _this.props.onError && _this.props.onError();
    };

    _this.state = {
      src: props.src
    };
    return _this;
  }

  _createClass(Img, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if ('src' in nextProps) {
        this.setState({
          src: nextProps.src
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var type = this.props.type;

      if (type === 'contain') {
        return _react.default.createElement(_Contain.default, _extends({}, this.props, this.state, {
          onError: this.handleImgLoadError
        }));
      }

      return _react.default.createElement(_Cover.default, _extends({}, this.props, this.state, {
        onError: this.handleImgLoadError
      }));
    }
  }]);

  return Img;
}(_react.Component);

exports.default = Img;
Img.displayName = 'Img';
Img.propTypes = {
  /**
   * 图片显示模式
   */
  type: _propTypes.default.oneOf(['cover', 'contain']),

  /**
   * 图片 url
   */
  src: _propTypes.default.string.isRequired,

  /**
   * 图片的 title，hover 上去会显示出来
   */
  title: _propTypes.default.string,

  /**
   * 图片加载失败的兜底图片
   */
  errorImgSrc: _propTypes.default.string,

  /**
   * 图片加载失败的回调方法
   */
  onError: _propTypes.default.func,

  /**
   * 图片显示宽度
   */
  width: _propTypes.default.number,

  /**
   * 图片显示高度
   */
  height: _propTypes.default.number,

  /**
   * 图片的 alt 通常用于屏幕阅读器（盲人）识别
   */
  alt: _propTypes.default.string,

  /**
   * 形状展现
   */
  shape: _propTypes.default.string,

  /**
   * 启用阿里 CDN 图片优化压缩后缀
   */
  enableAliCDNSuffix: _propTypes.default.bool
};
Img.defaultProps = {
  type: 'cover',
  alt: '',
  title: '',
  errorImgSrc: '',
  className: '',
  shape: 'sharp',
  enableAliCDNSuffix: false
};